name: Build Android APK (Debug)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Node set up (with/without cache) ---------------------------------
      - name: Setup Node (with cache)
        if: ${{ hashFiles('**/package-lock.json') != '' || hashFiles('**/yarn.lock') != '' || hashFiles('**/npm-shrinkwrap.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            npm-shrinkwrap.json
            yarn.lock

      - name: Setup Node (no cache)
        if: ${{ hashFiles('**/package-lock.json') == '' && hashFiles('**/yarn.lock') == '' && hashFiles('**/npm-shrinkwrap.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- Java & Android SDK -----------------------------------------------
      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platforms;android-34
            build-tools;34.0.0
            platform-tools

      # --- Install dependencies ---------------------------------------------
      - name: Install deps
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Using npm ci (lockfile found)"
            npm ci --no-audit --fund=false
          else
            echo "Using npm install (no lockfile)"
            npm install --no-audit --fund=false
          fi

      # (Optional) Generate icons from a single source if icons are missing
      - name: Ensure PWA Icons
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          mkdir -p public/icons
          if [ ! -f public/icons/icon-192.png ] || [ ! -f public/icons/icon-512.png ]; then
            if [ -f public/icon.png ]; then SRC=public/icon.png; else SRC=/usr/share/icons/hicolor/512x512/apps/computer.png; fi
            convert "$SRC" -resize 192x192 public/icons/icon-192.png
            convert "$SRC" -resize 512x512 public/icons/icon-512.png
            cp public/icons/icon-192.png public/icons/maskable-192.png
            cp public/icons/icon-512.png public/icons/maskable-512.png
          fi

      - name: Build web bundle
        run: npm run build

      - name: Add Android platform (Capacitor)
        run: |
          npx --yes @capacitor/cli@latest cap add android || true
          npx --yes @capacitor/cli@latest cap sync android

      - name: Assemble debug APK
        working-directory: android
        run: ./gradlew --no-daemon assembleDebug

      - name: Zip APK
        run: |
          mkdir -p artifacts
          cp android/app/build/outputs/apk/debug/app-debug.apk artifacts/WishCraft-APK-debug.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WishCraft-APK
          path: artifacts/WishCraft-APK-debug.apk
